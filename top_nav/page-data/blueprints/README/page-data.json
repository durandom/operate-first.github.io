{"componentChunkName":"component---src-templates-doc-js","path":"/blueprints/README","result":{"data":{"site":{"siteMetadata":{"title":"Operate First"}},"mdx":{"id":"7f2f2656-8238-5d11-8c5f-719d836f590b","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Operate First Blueprint\"), mdx(\"p\", null, \"This repository containers documentation of the Operate First Blueprint, it covers topics like architecture (incl.\\nlogical diagrams, documents of decisions taken), deployment (schema or physical diagrams).\"), mdx(\"h2\", null, \"Architectural decisions\"), mdx(\"p\", null, \"We keep track of architectural decisions using a lightweigh architectural decision records. More information on the\\nused format is available at \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://adr.github.io/madr/\"\n  }), \"https://adr.github.io/madr/\"), \". General information about architectural decision records\\nis available at \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://adr.github.io/\"\n  }), \"https://adr.github.io/\"), \" .\"), mdx(\"p\", null, \"Architectural decisions\"), mdx(\"ul\", {\n    \"className\": \"pf-c-list\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/03a14cb20c4c7c0ebca1aafce34af99a/0000-use-markdown-architectural-decision-records.md\"\n  }), \"ADR-0000\"), \" - Use Markdown Architectural Decision Records\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/128681385c8b0d3ea61efc6888c26503/0001-use-gpl3-as-license.md\"\n  }), \"ADR-0001\"), \" - Use GNU GPL as license \")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","description":null}}},"pageContext":{"id":"7f2f2656-8238-5d11-8c5f-719d836f590b","slug":"README"}},"staticQueryHashes":["117426894","3000541721","3753692419"]}