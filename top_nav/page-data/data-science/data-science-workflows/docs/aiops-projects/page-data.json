{"componentChunkName":"component---src-templates-doc-js","path":"/data-science/data-science-workflows/docs/aiops-projects","result":{"data":{"site":{"siteMetadata":{"title":"Operate First"}},"mdx":{"id":"8d69a587-a692-54cc-9bc7-50a549c4bf6b","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"AI Ops Projects\"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"This document contains a list of active projects within the AI Ops Team\")), mdx(\"ol\", {\n    \"className\": \"pf-c-list\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"AI-CoE SRE\"), \" : The goal of this project is to outline and practice a common \\u2018bleeding edge technology\\u2019 approach for all AI CoE endeavors to operate their software components and services. All services target OpenShift as the primary platform, but still extending to the full stack - from underlying hardware up to the applications running on top of a service. E.g. supporting custom AI service on Seldon provided by DataHub on PSI on OpenStack. \")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"AI-Enablement Initiative\"), \" : At AICoE, we have been actively involved in collaborating with teams within Red Hat to advance different products, services and operations using AI. In order to enable and/or educate teams and get engineers or stakeholders more involved in the projects, and in order to get them to be able to effectively use the solutions, we are working on a way to  streamline the process in which we make the engagements and measure the impact of each project. \")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Auto FAQ\"), \" : The OpenShift product management team has reached out to the AI CoE regarding developing a tool that could generate and continuously update an FAQ based on the content in our mailing lists. The stated goal of this project is to, \\u201Cuse Machine Learning technique(s) to auto-generate user-visible FAQs and keep them updated.\\u201D Which could be framed as a question answering systems or a text generator. This is being done in order to reduce the amount of time Openshift PM\\u2019s spend answering similar or duplicate questions.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Ceph Data Drive Failure\"), \" : Recently, the Ceph team started collecting user data to create their own dataset. Since this data comes from actual Ceph clusters, the model can be made more accurate by re-training on this dataset. But since the data is not labelled, i.e. it does not have information on whether or not a hard drive failed, training our supervised model is not straightforward. The goal of this project is to explore whether, given the unlabeled data collected from Ceph users, it is possible to perform the same analysis as we did for Backblaze data, by implementing a heuristic or an active learning approach to generate labels.  \")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"CJA Topic Modeling\"), \" : The Voice of Customer team has been focused on developing a process to systematically track customer sentiment for a larger portfolio of our customers and products in order to know our customers better. The VoC team collaborated with AICoE to scale this process by using AI techniques to gather meaningful insights from customer data. In order to analyze customer feedback for themes we used topic analysis techniques and were able to detect key themes and topics in customer verbatim that need attention. By tying the key themes and topics to customer satisfaction scores and customer sentiment values, we can get a fair understanding of customer\\u2019s pain points and help one better improve one\\u2019s products and services. \")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Cloud Price List Analysis\"), \" : Most customers of Red Hat use various cloud services like Azure, AWS and many others for different tasks. These cloud providing companies keep changing their prices time to time. It would be really helpful to the customer to understand how the prices are changing and take appropriate measures to best manage the cost. This project aims to come up with solutions that will help the Cost Management team to make wise decisions on how cloud services should be managed with time.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Data Science Workflows\"), \" : AI Ops team has been working on developing a more structured process around how we manage, execute and deliver on our data science projects, especially those where we collaborate with other Red Hat teams. Having a common framework that we can all start to build from as the team grows and continues to take on more data science projects, it will be hugely beneficial to have an agreed upon and documented process like this in place. And more important than just the existence of some documentation, is that we actually use these tools and find that they provide us with some value. Meaning, that we should keep updating and evolving this process to suit our needs.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Insights Configuration Files Analysis\"), \" : Red Hat Insights is a tool that provides analytics for Red Hat systems. It collects the system data to find vulnerabilities through manually written rules. The systems data is collected periodically and stored in a warehouse for data analysis. The data comprises hardware and software description, configurations, and logs of the systems. In this project, the focus is on analysis of configuration files. Some of these files are written by experts and customized by users such as the tuned files. Others are completely configured by end users such as the sssd configuration files. This project aims to develop data-driven methods to analyze these configuration files and detect misconfiguration in these files.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Insights Drift Analysis Baselines\"), \" : Drift Analysis application enables users to compare system configuration of one system to other systems or baselines in the cloud management services inventory. Baselines are configurations (set of name / value facts) that can be defined from scratch, as a copy of an existing system configuration, or as a copy of an existing baseline. We propose a method to recommend baseline configurations automatically to the users. They can then use the recommendation or tweak it further to compare their systems with the baselines. This approach of recommending baselines by utilizing the knowledge of other systems in the account would save time for users by identifying and recommending baselines. This would assist in standardizing RHEL configurations and in improving RHEL configuration management and operations.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Insights Invocation Hints\"), \" : Given a timestamp of insight archive uploads, deduce how systems checkin and how they were initially registered. \")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Insights SAP Analysis\"), \" : In this project, we analyze SAP instances on user systems through data collected from Insights. We create a superset dashboard that illustrates the topology of SAP workloads running on RHEL systems.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"OCP Alert Prediction\"), \" : If a customer\\u2019s OpenShift cluster goes down, it can have a significant impact on their business. Since there are a variety of reasons why an OpenShift cluster might fail, finding and fixing the issue that the cluster suffers from is not always trivial. However, if we can predict in advance whether a cluster will run into a given issue, then we may be able to fix it before it fails or before it severely impacts the customer. Issues in a cluster are often defined by, or closely related to, the alerts that it fires. So predicting alerts can be a step towards predicting the underlying issue. Thus, the goal of this project is to predict whether a cluster will fire a given alert within the next hour. \")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"OCP4 Anomaly Detection\"), \" : OCP4 deployments can suffer from a number of different issues and bugs. It can be tedious for an engineer to inspect and diagnose each deployment individually, which in turn can adversely affect customer experience. In this project, we work on the following two initiatives to address this problem.\"), mdx(\"ul\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"pf-c-list\"\n  }), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Anomaly Detection: In this approach, we try to identify issues before they occur, or before they significantly impact customers. To do so, we find deployments that behave \\u201Canomalously\\u201D and try to explain this behaviour.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Diagnosis Discovery: In this approach, we try to identify deployments that exhibit similar \\u201Csymptoms\\u201D (issues), and determine exactly what makes these deployments similar to one another. The support engineer can then use this information to determine the \\u201Cdiagnosis\\u201D of the issues, and apply the same or similar fix to all the deployments.\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Openshift SME Mailing List Analysis\"), \" : The Openshift-SME mailing list contains many discussions about the issues occurring with OpenShift deployments on a monthly basis and suggestions for how to address the issues. This project aims to help the Openshift product management team bring a more data driven approach to their planning process by performing text analysis on the openshift-sme mailing list and gathering insights into the trends in the email conversations.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Prometheus-api-client python\"), \" : A python library to make querying prometheus data simpler and also convert metric data into a more Data Science suitable format of a pandas dataframe.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Sentiment Analysis\"), \" : Red Hat has a variety of text based artifacts coming from sources starting from partner and customer engagements to documentation and communication logs. These text based artifacts are valuable and can be used to generate business insights and inform decisions if appropriately mined. The goal of this project is to allow other teams across Red Hat to have a tool at their disposal allowing them to analyze their text data and make informed decisions based on the insights gained from them.   \")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Sync Pipelines\"), \" : Data ingress pipelines for DataHub via Argo pipelines.  \"))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","description":null}}},"pageContext":{"id":"8d69a587-a692-54cc-9bc7-50a549c4bf6b","slug":"docs/aiops-projects"}},"staticQueryHashes":["117426894","3000541721","3753692419"]}